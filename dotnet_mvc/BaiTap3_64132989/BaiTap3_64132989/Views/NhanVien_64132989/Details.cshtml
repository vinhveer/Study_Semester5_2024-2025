@model BaiTap3_64132989.Models.EmployeeModel

@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Thông tin thành viên đã đăng ký</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <style>
        h3 {
            font-weight: 600;
            color: #0e0e0e;
        }
    </style>
</head> 
<body>
    <div class="container mt-4">
        <div class="row">
            <div class="col-sm-6">
                <h3 class="display-6">Thông tin thành viên đã đăng ký</h3>
            </div>
            <div class="col-sm-6">
                @Html.ActionLink("Chỉnh sửa", "Edit", new { id = Model.id }, new { @class = "btn btn-outline-success float-end me-2" })
                @Html.ActionLink("Xóa", "Delete", new { id = Model.id }, new { @class = "btn btn-outline-danger float-end me-2" })
                @Html.ActionLink("Trở về danh sách", "ListEmployee", "NhanVien_64132989", null, new { @class = "btn btn-outline-secondary float-end me-2" })
            </div>
        </div>
        <div class="card mt-3">
            <div class="card-body shadow-sm border-0">
                <div class="row">
                    <div class="col-sm-3">
                        <img src="@Url.Content(Model.avatar)" alt="Avatar" class="img-thumbnail" />
                    </div>
                    <div class="col-sm-9">
                        <h4 class="col-sm-9">@Html.DisplayFor(model => model.fullName)</h4>
                        <dl class="row">
                            <dt class="col-sm-3">@Html.DisplayNameFor(model => model.dateOfBirth)</dt>
                            <dd class="col-sm-9">@Html.DisplayFor(model => model.dateOfBirth)</dd>

                            <dt class="col-sm-3">@Html.DisplayNameFor(model => model.email)</dt>
                            <dd class="col-sm-9">@Html.DisplayFor(model => model.email)</dd>

                            <dt class="col-sm-3">@Html.DisplayNameFor(model => model.password)</dt>
                            <dd class="col-sm-9">@Html.DisplayFor(model => model.password)</dd>

                            @{
                                // Define department and position mappings
                                var departments = new Dictionary<string, string>
                                {
                                    { "1", "Kinh doanh" },
                                    { "2", "Kỹ thuật" },
                                    { "3", "Nhân sự" }
                                };

                                var positions = new Dictionary<string, string>
                                {
                                    { "1", "Nhân viên" },
                                    { "2", "Trưởng phòng" },
                                    { "3", "Giám đốc" }
                                };

                                // Get department and position text based on their values
                                var departmentText = departments.ContainsKey(Model.department) ? departments[Model.department] : "Unknown";
                                var positionText = positions.ContainsKey(Model.position) ? positions[Model.position] : "Unknown";
                            }

                            <dt class="col-sm-3">@Html.DisplayNameFor(model => model.department)</dt>
                            <dd class="col-sm-9">@departmentText</dd>

                            <dt class="col-sm-3">@Html.DisplayNameFor(model => model.position)</dt>
                            <dd class="col-sm-9">@positionText</dd>

                        </dl>
                        
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>
</html>
